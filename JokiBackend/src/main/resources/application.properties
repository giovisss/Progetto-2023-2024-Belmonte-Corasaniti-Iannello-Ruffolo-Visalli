spring.application.name=JokiBackend
server.port=8081

# database postgres
spring.datasource.url=jdbc:postgresql://magora.it:5432/joki
spring.datasource.username=giovanni
spring.datasource.password=penepiccolo
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#spring.security.oauth2.client.registration.keycloak.client-id=JokiBackend
#spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
#spring.security.oauth2.client.registration.keycloak.scope=openid
#spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/JokiRealm
#spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/JokiRealm

#logging.level.org.springframework.security=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG

keycloak.auth-server-url=http://localhost:8080/
keycloak.realm=JokiRealm
keycloak.resource=JokiBackend
keycloak.credentials.secret=4m7TxO8McamQBVoGgVkmBuPdFy4Jpu8L
keycloak.bearer-only=true
keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*

keycloak-admin.username=admin
keycloak-admin.password=admin


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/JokiRealm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt.auth.converter.resource-id=JokiBackend
jwt.auth.converter.principle-attribute=preferred_username
